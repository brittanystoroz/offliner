!function(e){"use strict";var n=1,t=e.off,s=function(){var e=new URL(document.currentScript.dataset.root||"",window.location.origin).href;return e.endsWith("/")?e:e+"/"}(),r=s+(document.currentScript.dataset.worker||"offliner-worker.js");e.off={_eventListeners:{},_xpromises:{},restore:function(){return e.off=t,this},install:function(){return this._installMessageHandlers(),navigator.serviceWorker.register(r,{scope:s})},connect:function(){this._installMessageHandlers()},on:function(e,n,t){this._has(e,n,t)||(this._eventListeners[e]=this._eventListeners[e]||[],this._eventListeners[e].push([n,t]))},update:function(){return this._xpromise("update")},activate:function(){return this._xpromise("activate")},_runListeners:function(e,n){var t=this._eventListeners[e]||[];t.forEach(function(e){var t=e[0],s=e[1];t.call(s,n)})},_installMessageHandlers:function i(){function e(e){var t=e.data,s=t?t.type:"",r=s.split(":");"offliner"===r[0]&&n._handleMessage(r[1],t)}var n=this;if(!i.done){if("function"==typeof BroadcastChannel){var t=new BroadcastChannel("offliner-channel");t.onmessage=e}else window.addEventListener("message",e);i.done=!0}},_handleMessage:function(e,n){navigator.serviceWorker;"xpromise"===e?this._resolveCrossPromise(n):this._runListeners(e,n)},_has:function(e,n,t){for(var s,r=this._eventListeners[e]||[],i=0;s=r[i];i++)if(s[0]===n&&s[1]===t)return!0;return!1},_xpromise:function(e){return new Promise(function(t,s){var r=n++,i={type:"xpromise",id:r,order:e};this._xpromises[r]=[t,s],this._send(i)}.bind(this))},_send:function(e){navigator.serviceWorker.controller.postMessage(e)},_resolveCrossPromise:function(e){var n=this._xpromises[e.id];n?n["rejected"===e.status?1:0](e.value):console.warn("Trying to resolve unexistent promise:",e.id)}}}(this);