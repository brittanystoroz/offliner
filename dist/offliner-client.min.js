!function(e){"use strict";var s=1,n=e.off,r=function(){var e=new URL(document.currentScript.dataset.root||"",window.location.origin).href;return e.endsWith("/")?e:e+"/"}(),t=r+(document.currentScript.dataset.worker||"offliner-worker.js");e.off={_eventListeners:{},_xpromises:{},restore:function(){return e.off=n,this},install:function(){return this._installMessageHandlers(),navigator.serviceWorker.register(t,{scope:r})},on:function(e,s,n){this._has(e,s,n)||(this._eventListeners[e]=this._eventListeners[e]||[],this._eventListeners[e].push([s,n]))},update:function(){return this._crossPromise("update")},activate:function(){return this._crossPromise("activate")},_runListeners:function(e,s){var n=this._eventListeners[e]||[];n.forEach(function(e){var n=e[0],r=e[1];n.call(r,s)})},_installMessageHandlers:function i(){function e(e){var n=e.data,r=n?n.type:"",t=r.split(":");"offliner"===t[0]&&s._handleMessage(t[1],n)}var s=this;if(!i.done){if("function"==typeof BroadcastChannel){var n=new BroadcastChannel("offliner-channel");n.onmessage=e}else window.addEventListener("message",e);i.done=!0}},_handleMessage:function(e,s){navigator.serviceWorker;"crossPromise"===e?this._resolveCrossPromise(s):this._runListeners(e,s)},_has:function(e,s,n){for(var r,t=this._eventListeners[e]||[],i=0;r=t[i];i++)if(r[0]===s&&r[1]===n)return!0;return!1},_crossPromise:function(e){return new Promise(function(n,r){var t=s++,i={type:"crossPromise",id:t,order:e};this._xpromises[t]=[n,r],this._send(i)}.bind(this))},_send:function(e){navigator.serviceWorker.controller.postMessage(e)},_resolveCrossPromise:function(e){var s=this._xpromises[e.id];s?s["rejected"===e.status?1:0](e.value):console.warn("Trying to resolve unexistent promise:",e.id)}}}(this);