!function(t){"use strict";function e(t){Object.defineProperty(this,"_uniquename",{get:function(){return t?t+":":""}}),this._isStarted=!1,this._updateControl={scheduled:!1,alreadyRunOnce:!1,intervalId:null,inProgressProcess:null},this.fetch=new r,this.prefetch=new n,this.update=new i}function n(){this._resourceFetchers={},this._resources=[]}function i(){this._options={}}function r(){this._pipeline=[]}["log","warn","error"].forEach(function(e){t[e]=console[e].bind(console)});var o="$zero$",s="__offliner-config";e.prototype.standalone=function(){this._isStarted||(t.addEventListener("install",function(t){t.waitUntil(this._install().then(function(){log("Offliner installed")}))}.bind(this)),t.addEventListener("activate",function(t){t.waitUntil(this._activateNextCache().then(clients.claim.bind(clients)).then(function(){log("Offliner activated!")}))}.bind(this)),t.addEventListener("fetch",function(t){"GET"!==t.request.method?t.respondWith(fetch(t.request)):(this.update.option("enabled")&&this._schedulePeriodicUpdates(),t.respondWith(this._fetch(t.request)))}.bind(this)),t.addEventListener("message",function(t){this._processMessage(t.data)}.bind(this)),this._isStarted=!0)},e.prototype._processMessage=function(t){"activate"===t&&this._activateNextCache()},e.prototype.get=function(t){var e=this._getConfigURL(t);return caches.open(s).then(function(t){return t.match(e).then(function(t){return t?t.json():Promise.resolve(null)})})},e.prototype.set=function(t,e){var n=this._getConfigURL(t),i=new Response(JSON.stringify(e));return caches.open(s).then(function(t){return t.put(n,i)})},e.prototype._getConfigURL=function(t){return"http://config/"+this._uniquename+t},e.prototype._schedulePeriodicUpdates=function(t){function e(t){if("number"==typeof t||["never","once"].indexOf(t)>=0)return t;if("string"==typeof t){var e=t[t.length-1],i=parseFloat(t),r=n(i,e);if(r)return r}return warn("Update period",t,"has an invalid format."),null}function n(t,e){var n={s:1e3,m:6e4,h:36e5},i=n[e];return i?t*i:null}if(!this._updateControl.scheduled){var i=e(this.update.option("period")),r=i/1e3;i&&"never"!==i&&(log("First update."),this._update(t).then(function(){"once"!==i&&(log("Next update in",r,"seconds."),this._updateControl.intervalId=setInterval(function(){log("Periodic update. Next in",r,"seconds."),this._update()}.bind(this),i))}.bind(this))),this._updateControl.scheduled=!0}},e.prototype._install=function(){var t=!0;return this.get("current-version").then(function(e){var n=this.update.option("enabled");return e?n?this._schedulePeriodicUpdates(t):Promise.resolve():this._initialize().then(this._prefetch.bind(this))}.bind(this),error)},e.prototype._initialize=function(){return this._getCacheNameForVersion(o).then(this.set.bind(this,"active-cache")).then(this.set.bind(this,"current-version",o)).then(this.set.bind(this,"activation-pending",!1))},e.prototype._update=function(t){function e(t){return t?i._getCacheNameForVersion(t).then(caches.open.bind(caches)).then(i._evolveCache.bind(i)).then(i.set.bind(i,"activation-pending",!0)).then(i._sendActivationPending.bind(i)):void 0}function n(){i._updateControl.alreadyRunOnce=!0,i._updateControl.inProgressProcess=null}var i=this;return this._updateControl.inProgressProcess||(this.update.flags={isCalledFromInstall:t},this._updateControl.inProgressProcess=this._getLatestVersion().then(this._checkIfNewVersion.bind(this)).then(e).then(n)["catch"](error).then(n)),this._updateControl.inProgressProcess},e.prototype._sendActivationPending=function(){this._broadcastMessage({type:"offliner:activationPending"})},e.prototype._sendActivationDone=function(){this._broadcastMessage({type:"offliner:activationDone"})},e.prototype._sendActivationFailed=function(){this._broadcastMessage({type:"offliner:activationFailed"})},e.prototype._broadcastMessage=function(t){if("function"==typeof BroadcastChannel){var e=new BroadcastChannel("offliner-channel");e.postMessage(t),e.close()}else clients.matchAll().then(function(e){e.forEach(function(e){e.postMessage(t)})})},e.prototype._getCacheNameForVersion=function(t){return Promise.resolve(this._uniquename+"cache-"+t)},e.prototype._prefetch=function(){return this._openActiveCache().then(this._doPrefetch.bind(this))},e.prototype._doPrefetch=function(t){function e(t,e){var n=t.reduce(function(t,e){return t[e.type]=[],t},{});return e.forEach(function(t){var e=n[t.type];e&&e.push(t)}),n}var n=this.prefetch.resources(),i=this.prefetch.fetchers(),r=e(i,n);return i.reduce(function(e,n){return e.then(function(){var e=r[n.type];return n.prefetch(e,t)})},Promise.resolve())},e.prototype._getLatestVersion=function(){return this.update.check()},e.prototype._checkIfNewVersion=function(t){return this.get("current-version").then(function(e){var n=this.update.isNewVersion(e,t);return n?(log("New version "+t+" found!"),log(e?"Updating from version "+e:"First update"),this.set("next-version",t).then(function(){return t})):(log("No update needed"),null)}.bind(this))},e.prototype._evolveCache=function(t){return this._openActiveCache().then(function(e){var n=this._doPrefetch.bind(this,t);return this.update.evolve(e,t,n)}.bind(this))},e.prototype._openActiveCache=function(){return this.get("active-cache").then(caches.open.bind(caches))},e.prototype._activateNextCache=function(){return this.get("activation-pending").then(function(t){return t?this._swapCaches().then(this._updateCurrentVersion.bind(this)).then(this._sendActivationDone.bind(this))["catch"](this._sendActivationFailed.bind(this)):void 0}.bind(this))},e.prototype._swapCaches=function(){function t(){return r.get("active-cache")}function e(){return r.get("next-version").then(r._getCacheNameForVersion.bind(r))}function n(t){var e=(t[0],t[1]);return r.set("active-cache",e).then(i([e,s]))}function i(t){return function(){return caches.keys().then(function(e){return Promise.all(e.filter(function(e){return t.indexOf(e)<0}).map(function(t){return caches["delete"](t)}))})}}var r=this;return Promise.all([t(),e()]).then(n)},e.prototype._updateCurrentVersion=function(){return this.get("next-version").then(this.set.bind(this,"current-version")).then(this.set.bind(this,"activation-pending",!1))},e.prototype._fetch=function(t){return new Promise(function(e,n){this._openActiveCache().then(function(i){function r(o,s){s=s||0;o.length;s===o.length?n():o[s](t,i).then(e,function(){r(o,s+1)})}var o=this.fetch.pipeline();r(o)}.bind(this))}.bind(this))},n.prototype.use=function(t){return this._resourceFetchers[t.type]=t,this._activeFetcher=t,this},n.prototype.resources=function(t){if(0===arguments.length)return this._resources;Array.isArray(t)||(t=[t]);for(var e,n=0;e=t[n];n++){var i;if("object"!=typeof e||!e||!e.type)try{i=this._activeFetcher.normalize(e)}catch(r){}i?this._resources.push(i):warn(e,"can not be normalized by",this._activeFetcher.type)}return this},n.prototype.fetchers=function(){return Object.keys(this._resourceFetchers).map(function(t){return this._resourceFetchers[t]}.bind(this))},i.prototype.option=function(t,e){return 2===arguments.length?(this._options[t]=e,this):1===arguments.length?this._options[t]:void 0},i.prototype.use=function(t){return this.option("enabled",!0),this._impl=t,this},Object.defineProperty(i.prototype,"flags",{set:function(t){this._impl.flags=t},get:function(){return this._impl.flags}}),i.prototype.check=function(){return this._impl&&this._impl.check()},i.prototype.isNewVersion=function(t,e){return this._impl.isNewVersion(t,e)},i.prototype.evolve=function(t,e,n){return this._impl.evolve(t,e,n)},r.prototype.use=function(t){return this._pipeline.push(t),this},r.prototype.pipeline=function(){return this._pipeline},r.prototype.orFail=function(){this.use(function(){return Promise.reject(new Error("End of fetch pipeline!"))})},t.off={},t.off.Offliner=e,t.off.sources={},t.off.fetchers={},t.off.updaters={}}("undefined"==typeof self?this:self);