!function(self){"use strict";function Offliner(uniquename){Object.defineProperty(this,"_uniquename",{get:function(){return uniquename?uniquename+":":""}}),this._isStarted=!1,this._isMiddleware=!1,this._middleware=null,Object.defineProperty(this,"_updateControl",{value:{scheduled:!1,alreadyRunOnce:!1,intervalId:null,inProgressProcess:null}}),Object.defineProperty(this,"fetch",{value:new FetchConfig}),Object.defineProperty(this,"prefetch",{value:new PrefetchConfig}),Object.defineProperty(this,"update",{value:new UpdateConfig})}function PrefetchConfig(){this._resourceFetchers={},this._resources=[]}function UpdateConfig(){this._options={}}function FetchConfig(){this._pipeline=[]}["log","warn","error"].forEach(function(method){self[method]=console[method].bind(console)});var DEFAULT_VERSION="-offliner:v0",CONFIG_CACHE="__offliner-config";Offliner.prototype.standalone=function(){if(this._isMiddleware)throw new Error("offliner has been already started as a middleware.");this._isStarted||(self.addEventListener("install",function(e){e.waitUntil(this._install().then(function(){log("Offliner installed")}))}.bind(this)),self.addEventListener("activate",function(e){var ok=function(){log("Offliner activated!")};e.waitUntil(this._activate().then(ok,ok))}.bind(this)),self.addEventListener("fetch",function(e){e.respondWith("GET"!==e.request.method?fetch(e.request):this._fetch(e.request))}.bind(this)),self.addEventListener("message",function(e){this._processMessage(e.data)}.bind(this)),this._isStarted=!0)},Offliner.prototype.asMiddleware=function(){if(this._isStarted)throw new Error("offliner has been already installed in standalone mode");return this._middleware||(this._middleware={onInstall:this._install.bind(this),onActivate:this._activate.bind(this),onFetch:function(request,response){return response||"GET"!==request.method?Promise.resolve(response):void this._fetch(request)}.bind(this),onMessage:function(e){this._processMessage(e.data)}.bind(this)}),this._isMiddleware=!0,this._middleware},Offliner.prototype._activate=function(){return this.get("activation-pending").then(function(isActivationPending){isActivationPending&&this._sendActivationPending()}.bind(this))},Offliner.prototype._processMessage=function(msg){switch(msg.type){case"xpromise":this._receiveCrossPromise(msg.id,msg.order);break;default:warn("Message not recognized:",msg)}},Offliner.prototype._receiveCrossPromise=function(id,order){switch(order){case"update":;this._update().then(this._resolve.bind(this,id),this._reject.bind(this,id));break;case"activate":this._activateNextCache().then(this._resolve.bind(this,id),this._reject.bind(this,id));break;default:warn("Cross Promise implementation not recognized:",order)}},Offliner.prototype._resolve=function(id,value){this._resolvePromise(id,"resolved",value)},Offliner.prototype._reject=function(id,reason){this._resolvePromise(id,"rejected",reason)},Offliner.prototype._resolvePromise=function(id,status,value){this._broadcastMessage({type:"xpromise",id:id,status:status,value:value})},Offliner.prototype.get=function(key){var configURL=this._getConfigURL(key);return caches.open(CONFIG_CACHE).then(function(cache){return cache.match(configURL).then(function(response){return response?response.json():Promise.resolve(null)})})},Offliner.prototype.set=function(key,value){var configURL=this._getConfigURL(key),response=new Response(JSON.stringify(value));return caches.open(CONFIG_CACHE).then(function(cache){return cache.put(configURL,response)})},Offliner.prototype._getConfigURL=function(key){return"http://config/"+this._uniquename+key},Offliner.prototype._install=function(){var fromInstall=!0;return this.get("current-version").then(function(currentVersion){var isUpdateEnabled=this.update.option("enabled");return currentVersion?isUpdateEnabled?this._update(fromInstall):Promise.resolve():this._initialize().then(this._prefetch.bind(this))}.bind(this),error)},Offliner.prototype._initialize=function(){return this._getCacheNameForVersion(DEFAULT_VERSION).then(this.set.bind(this,"active-cache")).then(this.set.bind(this,"current-version",DEFAULT_VERSION)).then(this.set.bind(this,"activation-pending",!1))},Offliner.prototype._update=function(fromInstall){function updateCache(newVersion){return newVersion?that._getCacheNameForVersion(newVersion).then(caches.open.bind(caches)).then(that._evolveCache.bind(that)).then(that.set.bind(that,"activation-pending",!0)).then(that._sendActivationPending.bind(that)).then(function(){return endUpdateProcess(),Promise.resolve(newVersion)}):(endUpdateProcess(),Promise.reject("no-update-needed"))}function endUpdateProcess(reason){return that._updateControl.alreadyRunOnce=!0,that._updateControl.inProgressProcess=null,"no-update-needed"===reason?Promise.reject(reason):void 0}var that=this;return this._updateControl.inProgressProcess||(this._updateControl.inProgressProcess=this.get("current-version").then(function(currentVersion){this.update.flags={isCalledFromInstall:fromInstall,isFirstUpdate:currentVersion===DEFAULT_VERSION}}.bind(this)).then(this._getLatestVersion.bind(this)).then(this._checkIfNewVersion.bind(this)).then(updateCache)),this._updateControl.inProgressProcess},Offliner.prototype._sendActivationPending=function(){this._broadcastMessage({type:"activationPending"})},Offliner.prototype._sendActivationDone=function(){this._broadcastMessage({type:"activationDone"})},Offliner.prototype._sendActivationFailed=function(){this._broadcastMessage({type:"activationFailed"})},Offliner.prototype._broadcastMessage=function(msg){if(msg.type="offliner:"+msg.type,this._isMiddleware)this.asMiddleware().broadcastMessage(msg,"offliner-channel");else if("function"==typeof BroadcastChannel){var channel=new BroadcastChannel("offliner-channel");channel.postMessage(msg),channel.close()}else clients.matchAll().then(function(controlled){controlled.forEach(function(client){client.postMessage(msg)})})},Offliner.prototype._getCacheNameForVersion=function(version){return Promise.resolve(this._uniquename+"cache-"+version)},Offliner.prototype._prefetch=function(){return this._openActiveCache().then(this._doPrefetch.bind(this))},Offliner.prototype._doPrefetch=function(cache){function groupResources(fetchers,resources){var resourceGatherers=fetchers.reduce(function(gatherers,fetcher){return gatherers[fetcher.type]=[],gatherers},{});return resources.forEach(function(resource){var resourcesByType=resourceGatherers[resource.type];resourcesByType&&resourcesByType.push(resource)}),resourceGatherers}var allResources=this.prefetch.resources(),fetchers=this.prefetch.fetchers(),resourcesByType=groupResources(fetchers,allResources);return fetchers.reduce(function(process,fetcher){return process.then(function(){var resources=resourcesByType[fetcher.type];return fetcher.prefetch(resources,cache)})},Promise.resolve())},Offliner.prototype._getLatestVersion=function(){return this.update.check()},Offliner.prototype._checkIfNewVersion=function(latestVersion){return this.get("current-version").then(function(currentVersion){var isNewVersion=this.update.isNewVersion(currentVersion,latestVersion);return isNewVersion?(log("New version "+latestVersion+" found!"),log(currentVersion?"Updating from version "+currentVersion:"First update"),this.set("next-version",latestVersion).then(function(){return latestVersion})):(log("No update needed"),null)}.bind(this))},Offliner.prototype._evolveCache=function(newCache){return this._openActiveCache().then(function(currentCache){var reinstall=this._doPrefetch.bind(this,newCache);return this.update.evolve(currentCache,newCache,reinstall)}.bind(this))},Offliner.prototype._openActiveCache=function(){return this.get("active-cache").then(caches.open.bind(caches))},Offliner.prototype._activateNextCache=function(){return this.get("activation-pending").then(function(isActivationPending){return isActivationPending?this._swapCaches().then(this._updateCurrentVersion.bind(this)):Promise.reject("no-activation-pending")}.bind(this))},Offliner.prototype._swapCaches=function(){function getCurrentCache(){return that.get("active-cache")}function getNextCache(){return that.get("next-version").then(that._getCacheNameForVersion.bind(that))}function swap(names){var nextCache=(names[0],names[1]);return that.set("active-cache",nextCache).then(deleteOtherCaches([nextCache,CONFIG_CACHE]))}function deleteOtherCaches(exclude){return function(){return caches.keys().then(function(cacheNames){return Promise.all(cacheNames.filter(function(cacheName){return exclude.indexOf(cacheName)<0}).map(function(cacheName){return caches["delete"](cacheName)}))})}}var that=this;return Promise.all([getCurrentCache(),getNextCache()]).then(swap)},Offliner.prototype._updateCurrentVersion=function(){var nextVersion=this.get("next-version");return nextVersion.then(this.set.bind(this,"current-version")).then(this.set.bind(this,"activation-pending",!1)).then(function(){return nextVersion})},Offliner.prototype._fetch=function(request){return new Promise(function(resolve,reject){this._openActiveCache().then(function(cache){function trySources(sources,from){from=from||0;sources.length;from===sources.length?reject():sources[from](request,cache).then(resolve,function(){trySources(sources,from+1)})}var sources=this.fetch.pipeline();trySources(sources)}.bind(this))}.bind(this))},PrefetchConfig.prototype.use=function(fetcher){return this._resourceFetchers[fetcher.type]=fetcher,this._activeFetcher=fetcher,this},PrefetchConfig.prototype.resources=function(resources){if(0===arguments.length)return this._resources;Array.isArray(resources)||(resources=[resources]);for(var resource,i=0;resource=resources[i];i++){var normalized;if("object"!=typeof resource||!resource||!resource.type)try{normalized=this._activeFetcher.normalize(resource)}catch(e){}normalized?this._resources.push(normalized):warn(resource,"can not be normalized by",this._activeFetcher.type)}return this},PrefetchConfig.prototype.fetchers=function(){return Object.keys(this._resourceFetchers).map(function(type){return this._resourceFetchers[type]}.bind(this))},UpdateConfig.prototype.option=function(optname,value){return 2===arguments.length?(this._options[optname]=value,this):1===arguments.length?this._options[optname]:void 0},UpdateConfig.prototype.use=function(impl){return this.option("enabled",!0),this._impl=impl,this},Object.defineProperty(UpdateConfig.prototype,"flags",{set:function(value){this._impl.flags=value},get:function(){return this._impl.flags}}),UpdateConfig.prototype.check=function(){return this._impl&&this._impl.check()},UpdateConfig.prototype.isNewVersion=function(currentVersion,latestVersion){return this._impl.isNewVersion(currentVersion,latestVersion)},UpdateConfig.prototype.evolve=function(currentCache,newCache,prefetch){return this._impl.evolve(currentCache,newCache,prefetch)},FetchConfig.prototype.use=function(source){return this._pipeline.push(source),this},FetchConfig.prototype.pipeline=function(){return this._pipeline},FetchConfig.prototype.orFail=function(){this.use(function(){return Promise.reject(new Error("End of fetch pipeline!"))})},self.off={},self.off.Offliner=Offliner,self.off.sources={},self.off.fetchers={},self.off.updaters={}}("undefined"==typeof self?this:self);